{"version":3,"sources":["../../src/data/utility-examples.js"],"names":["Observable","prop","utilityExamples","delay","label","inputs","t","c","apply","scheduler","map","delayWhen","content","timer","Number"],"mappings":"AAAA,SAASA,UAAT,QAA2B,MAA3B;AAEA,SAASC,IAAT,QAAqB,OAArB;AAEA;;AACA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,WADF;AAELC,IAAAA,MAAM,EAAE,CACN,CAAC;AAACC,MAAAA,CAAC,EAAC,EAAH;AAAOC,MAAAA,CAAC,EAAC;AAAT,KAAD,EAAgB;AAACD,MAAAA,CAAC,EAAC,EAAH;AAAOC,MAAAA,CAAC,EAAC;AAAT,KAAhB,EAA+B;AAACD,MAAAA,CAAC,EAAC,EAAH;AAAOC,MAAAA,CAAC,EAAC;AAAT,KAA/B,CADM,CAFH;AAKLC,IAAAA,KAAK,EAAE,CAACH,MAAD,EAASI,SAAT,KACLJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAV,CAAcT,IAAI,CAAC,SAAD,CAAlB,EAA+BE,KAA/B,CAAqC,EAArC,EAAyCM,SAAzC;AANG,GADsB;AAU7BE,EAAAA,SAAS,EAAE;AACTP,IAAAA,KAAK,EAAE,0CADE;AAETC,IAAAA,MAAM,EAAE,CACN,CAAC;AAACC,MAAAA,CAAC,EAAC,CAAH;AAAMC,MAAAA,CAAC,EAAC;AAAR,KAAD,EAAa;AAACD,MAAAA,CAAC,EAAC,EAAH;AAAOC,MAAAA,CAAC,EAAC;AAAT,KAAb,EAA0B;AAACD,MAAAA,CAAC,EAAC,EAAH;AAAOC,MAAAA,CAAC,EAAC;AAAT,KAA1B,CADM,CAFC;AAKTC,IAAAA,KAAK,EAAE,UAASH,MAAT,EAAiBI,SAAjB,EAA4B;AACjC,aAAOJ,MAAM,CAAC,CAAD,CAAN,CAAUM,SAAV,CAAoB,CAAC;AAAEC,QAAAA;AAAF,OAAD,KACzBZ,UAAU,CAACa,KAAX,CAAiBC,MAAM,CAACF,OAAD,CAAN,GAAkB,EAAnC,EAAuC,IAAvC,EAA6CH,SAA7C,CADK,CAAP;AAGD;AATQ;AAVkB,CAAxB","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { prop } from 'ramda';\n\n/* t = time, c = content */\nexport const utilityExamples = {\n  delay: {\n    label: 'delay(20)',\n    inputs: [\n      [{t:10, c:'1'}, {t:20, c:'2'}, {t:70, c:'1'}]\n    ],\n    apply: (inputs, scheduler) =>\n      inputs[0].map(prop('content')).delay(20, scheduler),\n  },\n\n  delayWhen: {\n    label: 'delayWhen(x => Observable.timer(20 * x))',\n    inputs: [\n      [{t:0, c:1}, {t:10, c:2}, {t:20, c:1}]\n    ],\n    apply: function(inputs, scheduler) {\n      return inputs[0].delayWhen(({ content }) =>\n        Observable.timer(Number(content) * 20, 1000, scheduler)\n      );\n    }\n  },\n};\n"],"file":"utility-examples.js"}