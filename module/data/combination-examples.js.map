{"version":3,"sources":["../../src/data/combination-examples.js"],"names":["Observable","combinationExamples","combineLatest","label","inputs","t","c","apply","x","y","content","concat","merge","race","startWith","scheduler","withLatestFrom","zip"],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\n\n/* t = time, c = content */\nexport const combinationExamples = {\n  combineLatest: {\n    label: 'combineLatest((x, y) => \"\" + x + y)',\n    inputs: [\n      [{t:0, c:1}, {t:20, c:2}, {t:65, c:3}, {t:75, c:4}, {t:92, c:5}],\n      [{t:10, c:'A'}, {t:25, c:'B'}, {t:50, c:'C'}, {t:57, c:'D'}]\n    ],\n    apply: function(inputs) {\n      return Observable.combineLatest(inputs[0], inputs[1],\n        (x, y) => ('' + x.content + y.content)\n      );\n    }\n  },\n\n  concat: {\n    label: 'concat',\n    inputs: [\n      [{t:0, c:1}, {t:15, c:1}, {t:50, c:1}, 57],\n      [{t:0, c:2}, {t:8, c:2}, 12]\n    ],\n    apply: function(inputs) {\n      return Observable.concat(...inputs);\n    }\n  },\n\n  merge: {\n    label: 'merge',\n    inputs: [\n      [{t:0, c:20}, {t:15, c:40}, {t:30, c:60}, {t:45, c:80}, {t:60, c:100}],\n      [{t:37, c:1}, {t:68, c:1}]\n    ],\n    apply: function(inputs) {\n      return Observable.merge(...inputs);\n    },\n  },\n\n  race: {\n    label: 'race',\n    inputs: [\n      [{t:10, c:20}, {t:20, c:40}, {t:30, c:60}],\n      [{t:5, c:1}, {t:15, c:2}, {t:25, c:3}],\n      [{t:20, c:0}, {t:32, c:0}, {t:44, c:0}]\n    ],\n    apply: function(inputs) {\n      return Observable.race(inputs);\n    }\n  },\n\n  startWith: {\n    label: 'startWith(1)',\n    inputs: [\n      [{t:30, c:2}, {t:40, c:3}]\n    ],\n    apply: function(inputs, scheduler) {\n      return inputs[0].startWith(1, scheduler);\n    }\n  },\n\n  withLatestFrom: {\n    label: 'withLatestFrom((x, y) => \"\" + x + y)',\n    inputs: [\n      [{t:0, c:1}, {t:20, c:2}, {t:65, c:3}, {t:75, c:4}, {t:92, c:5}],\n      [{t:10, c:'A'}, {t:25, c:'B'}, {t:50, c:'C'}, {t:57, c:'D'}]\n    ],\n    apply: function(inputs) {\n      return inputs[0].withLatestFrom(inputs[1],\n        (x, y) => ('' + x.content + y.content)\n      );\n    }\n  },\n\n  zip: {\n    label: 'zip',\n    inputs: [\n      [{t:0, c:1}, {t:20, c:2}, {t:65, c:3}, {t:75, c:4}, {t:92, c:5}],\n      [{t:10, c:'A'}, {t:25, c:'B'}, {t:50, c:'C'}, {t:57, c:'D'}]\n    ],\n    apply: function(inputs) {\n      return Observable.zip(inputs[0], inputs[1],\n        (x, y) => ('' + x.content + y.content)\n      );\n    }\n  },\n}"],"file":"combination-examples.js"}