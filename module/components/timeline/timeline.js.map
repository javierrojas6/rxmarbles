{"version":3,"sources":["../../../src/components/timeline/timeline.js"],"names":["svg","div","isolate","Observable","apply","flip","map","max","merge","path","prop","sortBy","zip","Collection","DIMENS","MARBLE_SIZE","STROKE_WIDTH","Marble","EndMarker","timelineStyle","padding","spaceSmall","spaceMedium","sortMarbleDoms$","marbles$","doms$","pluck","dataList$","combineLatest","OriginalTimeline","sources","DOM","marbles","marblesState$","end","end$","interactive","interactive$","marblesProps$","minTime","maxTime","time","endMarkerProps$","maxMarbleTime","reduce","isTall","marblesSources","props","isDraggable","endMarkerSources","gather","marbleDOMs$","endMarker","vtree$","marbleDOMs","endMarkerDOM","style","attrs","viewBox","width","height","overflow","line","x1","y1","x2","y2","stroke","strokeWidth","polygon","points","marbleData$","debounceTime","withLatestFrom","data$","endMarkerTime","data","Timeline"],"mappings":"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","sourcesContent":["import { svg, div } from '@cycle/dom';\nimport isolate from '@cycle/isolate';\nimport { Observable } from 'rxjs';\nimport { apply, flip, map, max, merge, path, prop, sortBy, zip } from 'ramda';\n\nimport { Collection } from '../../collection';\nimport { DIMENS } from '../../styles';\n\nimport { MARBLE_SIZE, STROKE_WIDTH } from './timeline-constants';\nimport { Marble } from './marble';\nimport { EndMarker } from './end-marker';\n\nconst timelineStyle = { padding: `${DIMENS.spaceSmall} ${DIMENS.spaceMedium}` };\n\nfunction sortMarbleDoms$(marbles$) {\n  const doms$ = Collection.pluck(marbles$, prop('DOM'));\n  const dataList$ = Collection.pluck(marbles$, prop('data'));\n\n  return Observable.combineLatest(doms$, dataList$, zip)\n    .map(sortBy(path([1, 'time'])))\n    .map(map(prop(0)));\n}\n\nfunction OriginalTimeline(sources) {\n  const {\n    DOM,\n    marbles: marblesState$,\n    end: end$,\n    interactive: interactive$\n  } = sources;\n  const marblesProps$ = end$\n    .map((end) => ({\n      minTime: 0,\n      maxTime: end.time,\n    }));\n  const endMarkerProps$ = Observable.combineLatest(marblesState$, end$)\n    .map(([marbles, end]) => {\n      const maxMarbleTime = marbles.map(prop('time')).reduce(max, 0);\n      return {\n        isTall: end.time <= (maxMarbleTime + MARBLE_SIZE),\n        minTime: maxMarbleTime,\n        maxTime: 100,\n      };\n    });\n\n  const marblesSources = {\n    DOM,\n    props: marblesProps$,\n    isDraggable: interactive$\n  };\n  const endMarkerSources = {\n    DOM,\n    props: endMarkerProps$,\n    time: end$.pluck('time'),\n    isDraggable: interactive$,\n  };\n\n  const marbles$ = Collection.gather(\n    Marble, marblesSources, marblesState$, 'itemId');\n  const marbleDOMs$ = sortMarbleDoms$(marbles$);\n  const endMarker = EndMarker(endMarkerSources);\n\n  const vtree$ = Observable.combineLatest(marbleDOMs$, endMarker.DOM)\n    .map(([marbleDOMs, endMarkerDOM]) =>\n      div({ style: timelineStyle }, [\n        svg({\n          attrs: { viewBox: '0 0 7 10' },\n          style: { width: '48px', height: '68px', overflow: 'visible' },\n        }, [\n          svg.line({\n            attrs: { x1: '0', y1: '5', x2: '112', y2: '5' },\n            style: { stroke: 'black', strokeWidth: `${STROKE_WIDTH}` },\n          }),\n          svg.polygon({\n            attrs: { points: '111.7,6.1 111.7,3.9 114,5' },\n          }),\n        ]),\n        svg({\n          attrs: { viewBox: '0 0 100 10' },\n          style: { width: '680px', height: '68px', overflow: 'visible' },\n        }, [\n          endMarkerDOM,\n          ...marbleDOMs,\n        ]),\n      ])\n    );\n\n  const marbleData$ = Collection.pluck(marbles$, prop('data'))\n    .debounceTime(0)\n    .withLatestFrom(marblesState$, zip)\n    .map(map(apply(flip(merge))));\n\n  const data$ = Observable.combineLatest(marbleData$, endMarker.time)\n    .map(([marbles, endMarkerTime]) => ({\n      marbles,\n      end: { time: endMarkerTime },\n    }));\n\n  return { DOM: vtree$, data: data$ };\n}\n\nexport function Timeline(sources) {\n  return isolate(OriginalTimeline)(sources);\n}\n"],"file":"timeline.js"}