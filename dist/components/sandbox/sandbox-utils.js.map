{"version":3,"sources":["../../../src/components/sandbox/sandbox-utils.js"],"names":["calculateNotificationContentHash","calculateNotificationHash","content","SMALL_PRIME_1","SMALL_PRIME_2","SOME_PRIME_NUMBER","split","map","x","charCodeAt","reduce","y","parseInt","time","SMALL_PRIME","LARGE_PRIME","MAX","contentHash"],"mappings":";;;;;QAKgBA,gC,GAAAA,gC;QAeAC,yB,GAAAA,yB;;AApBhB;AACA;AACA;AACA;AAEO,SAASD,gCAAT,CAA0CE,OAA1C,EAAmD;AACxD,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,iBAAiB,GAAG,GAA1B;;AACA,MAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAOA,OAAO,CAACI,KAAR,CAAc,EAAd,EACJC,GADI,CACAC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CADL,EAEJC,MAFI,CAEG,CAACF,CAAD,EAAIG,CAAJ,KAAWH,CAAC,GAAGL,aAAL,GAAuBQ,CAAC,GAAGP,aAFxC,CAAP;AAGD,GAJD,MAIO,IAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AACtC,WAAOU,QAAQ,CAACV,OAAD,CAAR,GAAoBG,iBAA3B;AACD,GAFM,MAEA,IAAI,OAAOH,OAAP,KAAmB,SAAvB,EAAkC;AACvC,WAAOA,OAAO,GAAGG,iBAAH,GAAuBA,iBAAiB,GAAC,CAAvD;AACD;AACF;;AAEM,SAASJ,yBAAT,CAAmC;AAAEY,EAAAA,IAAF;AAAQX,EAAAA;AAAR,CAAnC,EAAsD;AAC3D,QAAMY,WAAW,GAAG,CAApB;AACA,QAAMC,WAAW,GAAG,OAApB;AACA,QAAMC,GAAG,GAAG,MAAZ;AACA,QAAMC,WAAW,GAAGjB,gCAAgC,CAACE,OAAD,CAApD;AACA,SAAQ,CAACW,IAAI,GAAGI,WAAP,GAAqBH,WAAtB,IAAqCC,WAAtC,GAAqDC,GAA5D;AACD","sourcesContent":["/*\n * Conversion from virtual time streams out to timeline content, and\n * vice-versa, and related functions.\n */\n\nexport function calculateNotificationContentHash(content) {\n  const SMALL_PRIME_1 = 59;\n  const SMALL_PRIME_2 = 97;\n  const SOME_PRIME_NUMBER = 877;\n  if (typeof content === \"string\") {\n    return content.split(\"\")\n      .map(x => x.charCodeAt(0))\n      .reduce((x, y) => (x * SMALL_PRIME_1) + (y * SMALL_PRIME_2));\n  } else if (typeof content === \"number\") {\n    return parseInt(content) * SOME_PRIME_NUMBER;\n  } else if (typeof content === 'boolean') {\n    return content ? SOME_PRIME_NUMBER : SOME_PRIME_NUMBER*3;\n  }\n}\n\nexport function calculateNotificationHash({ time, content }) {\n  const SMALL_PRIME = 7;\n  const LARGE_PRIME = 1046527;\n  const MAX = 100000;\n  const contentHash = calculateNotificationContentHash(content);\n  return ((time + contentHash + SMALL_PRIME) * LARGE_PRIME) % MAX;\n}\n\n"],"file":"sandbox-utils.js"}